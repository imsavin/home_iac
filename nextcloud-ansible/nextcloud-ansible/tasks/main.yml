- name: add repositories
  apt_repository:
    repo: "{{ item }}"
    state: present
  become: true
  with_items: "{{ repos }}"

- name: install apps
  apt:
    name: "{{ apps }}"
    update_cache: true
    state: present
  become: true

- name: generate and copy nginx config for standalone instance
  template:
    src: nextcloud.j2
    dest: /etc/nginx/sites-enabled/nextcloud.conf
  become: true
  
- name: remove default nginx config
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: true

- name: overwrite php-fpm www.conf
  copy:
    src: www.conf
    dest: /etc/php/7.4/fpm/pool.d/www.conf
  become: true

- name: overwrite php.ini
  copy:
    src: php.ini
    dest: /etc/php/7.4/fpm/php.ini
  become: true

- name: start and enable nginx
  systemd:
    name: nginx
    state: restarted
    enabled: yes
  become: true

- name: start and enable postgres
  systemd:
    name: postgresql
    enabled: yes
    state: started
  become: true

- name: start and enable php-fpm
  systemd:
    name: php7.4-fpm
    enabled: yes
    state: restarted
  become: true

- name: start and enable redis
  systemd:
    name: redis
    state: started
    enabled: yes
  become: true

- name: create database
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ postgres.database }}"
    state: present


- name: create database user
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{ postgres.database }}"
    name: "{{ postgres.user }}"
    password: "{{ postgres.password }}"
    priv: ALL
    state: present

- name: download and install nextcloud
  unarchive:
    src: https://download.nextcloud.com/server/releases/nextcloud-{{ nc_version }}.tar.bz2
    dest: "/var/www/html"
    remote_src: yes
  become: true

- name: change owner to www-data in nextcloud dir
  file:
    path: /var/www/html/nextcloud
    state: directory
    owner: www-data
    group: www-data
    recurse: yes
  become: true

- name: systemd reload
  systemd:
    daemon_reload: yes
  become: true
